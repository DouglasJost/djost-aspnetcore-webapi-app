// <auto-generated />
using System;
using AppDomainEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppDomainEntityFramework.Migrations
{
    [DbContext(typeof(MusicCollectionDbContext))]
    [Migration("20241206055108_UpdatePasswordToVarcharMax")]
    partial class UpdatePasswordToVarcharMax
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppDomainEntities.Entities.UserAccount", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("UserDefined")
                        .HasColumnType("bit");

                    b.HasKey("UserAccountId")
                        .HasName("PK_User");

                    b.ToTable("UserAccount");

                    b.HasData(
                        new
                        {
                            UserAccountId = new Guid("4ec76740-6895-40f4-abb8-3fbab440fff1"),
                            FirstName = "JWT",
                            Inactive = false,
                            LastModifiedDate = new DateTime(2024, 12, 6, 5, 51, 8, 39, DateTimeKind.Utc).AddTicks(984),
                            LastName = "Issuer",
                            UserDefined = true
                        });
                });

            modelBuilder.Entity("AppDomainEntities.Entities.UserLogin", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("UserDefined")
                        .HasColumnType("bit");

                    b.HasKey("UserAccountId");

                    b.HasIndex(new[] { "Login" }, "FK_UserLogin");

                    b.ToTable("UserLogin");

                    b.HasData(
                        new
                        {
                            UserAccountId = new Guid("4ec76740-6895-40f4-abb8-3fbab440fff1"),
                            Inactive = false,
                            LastModifiedDate = new DateTime(2024, 12, 6, 5, 51, 8, 39, DateTimeKind.Utc).AddTicks(1054),
                            Login = "JwtIssuer",
                            Password = "RidersOnTheStorm",
                            UserDefined = true
                        });
                });

            modelBuilder.Entity("AppDomainEntities.Entities.UserLogin", b =>
                {
                    b.HasOne("AppDomainEntities.Entities.UserAccount", "UserAccount")
                        .WithOne("UserLogin")
                        .HasForeignKey("AppDomainEntities.Entities.UserLogin", "UserAccountId")
                        .IsRequired()
                        .HasConstraintName("FK_UserLogin_User");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("AppDomainEntities.Entities.UserAccount", b =>
                {
                    b.Navigation("UserLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
